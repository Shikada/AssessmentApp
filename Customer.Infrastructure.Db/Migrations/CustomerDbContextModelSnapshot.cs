// <auto-generated />
using System;
using Customer.Infrastructure.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Customer.Infrastructure.Db.Migrations
{
    [DbContext(typeof(CustomerDbContext))]
    partial class CustomerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("Customer.Core.Chassis", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReservedQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("WarehouseId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.ToTable("AllChassis");
                });

            modelBuilder.Entity("Customer.Core.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Customer.Core.Engine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Killowatts")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReservedQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("WarehouseId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Engines");
                });

            modelBuilder.Entity("Customer.Core.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Paid")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("VehicleOrderId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("VehicleOrderId")
                        .IsUnique();

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Customer.Core.OptionPack", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReservedQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("WarehouseId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.ToTable("OptionPacks");
                });

            modelBuilder.Entity("Customer.Core.PreassembledVehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ChassisId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EngineId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OptionPackId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReservedQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("WarehouseId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.ToTable("PreassembledVehicle");
                });

            modelBuilder.Entity("Customer.Core.VehicleOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ChassisId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EngineId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OptionPackId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PartsAwaitingManufacture")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PreassembledVehicleId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("VehicleOrders");
                });

            modelBuilder.Entity("Customer.Core.Warehouse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("Customer.Core.Chassis", b =>
                {
                    b.HasOne("Customer.Core.Warehouse", null)
                        .WithMany("AllChassis")
                        .HasForeignKey("WarehouseId");
                });

            modelBuilder.Entity("Customer.Core.Engine", b =>
                {
                    b.HasOne("Customer.Core.Warehouse", null)
                        .WithMany("Engines")
                        .HasForeignKey("WarehouseId");
                });

            modelBuilder.Entity("Customer.Core.Invoice", b =>
                {
                    b.HasOne("Customer.Core.VehicleOrder", null)
                        .WithOne("Invoice")
                        .HasForeignKey("Customer.Core.Invoice", "VehicleOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Customer.Core.OptionPack", b =>
                {
                    b.HasOne("Customer.Core.Warehouse", null)
                        .WithMany("OptionPacks")
                        .HasForeignKey("WarehouseId");
                });

            modelBuilder.Entity("Customer.Core.PreassembledVehicle", b =>
                {
                    b.HasOne("Customer.Core.Warehouse", null)
                        .WithMany("PreassembledVehicles")
                        .HasForeignKey("WarehouseId");
                });

            modelBuilder.Entity("Customer.Core.VehicleOrder", b =>
                {
                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("Customer.Core.Warehouse", b =>
                {
                    b.Navigation("AllChassis");

                    b.Navigation("Engines");

                    b.Navigation("OptionPacks");

                    b.Navigation("PreassembledVehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
